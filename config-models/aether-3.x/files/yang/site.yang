module site {
  namespace "http://opennetworking.org/aether/site";
  prefix st;

  import aether-types{ prefix at; }
  import enterprise{ prefix ent; }
  import network{ prefix net; }
  import ietf-yang-types{ prefix yg; }

  organization "Open Networking Foundation.";
  contact "Scott Baker";
  description 
    "An Aether site is a location where resources are deployed.";

  revision "2021-06-02" {
    description "An Aether Site.";
    reference "RFC 6087";
  }

  typedef site-id {
        type yg:yang-identifier {
            length 1..32;
        }
  }

  container site {
    description "The top level container";

    list site {
      key "id";
      description
        "List of site";

      leaf id {
        type site-id;
        description "ID for this site.";
      }

      leaf display-name {
        type string {
            length 1..80;
        }
        description "display name to use in GUI or CLI";
      }

      leaf enterprise {
        type leafref {
          path "/ent:enterprise/ent:enterprise/ent:id";
        }              
        description
          "Link to enterprise that owns this site";
      }

      container imsi-definition {
        leaf mcc {
          type at:mcc;
          description "mobile country code";
        }
        leaf mnc {
          type at:mcc;
          description "mobile network code";
        }
        leaf enterprise {
          type at:ent;
          description "enterprise-specific identifier";
        }
        leaf format {
          type string {
            length 15;
          }
          default "CCCNNNEEESSSSSS";
          description "IMSI format specifier, describes how fields are packed into an IMSI. Must be exactly 15 characters long";
          // Format specifiers:
          //   C = MCC
          //   N = MNC
          //   E = Enterprise
          //   0 = Forced Zero
          //   S = Subscriber ID
          // default is
          //   3 digit MCC
          //   3 digit MNC
          //   3 digit enterprise ID
          //   5 digit subscriber ID
        }
      }

      // DEPRECATED
      leaf network {
        type leafref {
          path "/net:network/net:network/net:id";
        }          
        description
          "Link to network for this vcs";
      }      

      leaf description {
        type string {
          length 1..100;
        }
        mandatory true;
        description "description of this site";
      }         
    }
  } 
}
