# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ran-simulator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ran-simulator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "ran-simulator.fullname" . }}
      app: onos
      type: sim
      resource: {{ template "ran-simulator.fullname" . }}
      {{- include "ran-simulator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: {{ template "ran-simulator.fullname" . }}
        app: onos
        type: sim
        resource: {{ template "ran-simulator.fullname" . }}
        {{- include "ran-simulator.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: ran-simulator
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - "-caPath=/etc/ran-simulator/certs/tls.cacrt"
            - "-keyPath=/etc/ran-simulator/certs/tls.key"
            - "-certPath=/etc/ran-simulator/certs/tls.crt"
            - "-fade={{ .Values.fade }}"
            - "-googleAPIKey={{ .Values.googleApiKey }}"
            - "-locationsScale={{ .Values.locationsScale }}"
            - "-maxUEs={{ .Values.maxUEs }}"
            - "-metricsAllHoEvents={{ .Values.metricsAllHoEvents }}"
            - "-metricsPort={{ .Values.metricsPort }}"
            - "-minUEs={{ .Values.minUEs }}"
            - "-showPower={{ .Values.showPower }}"
            - "-showRoutes={{ .Values.showRoutes }}"
            - "-stepDelayMs={{ .Values.stepDelayMs }}"
            - "-zoom={{ .Values.zoom }}"
            - "-maxNumUesPerCell={{ .Values.maxNumUesPerCell }}"
          ports:
            - name: grpc
              containerPort: 5150
            {{- if .Values.debug }}
            - name: debug
              containerPort: 40000
              protocol: TCP
            {{- end }}
          startupProbe:
            tcpSocket:
              port: 5150
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: secret
              mountPath: /etc/ran-simulator/certs
              readOnly: true
            - name: config
              mountPath: /etc/onos/config
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # Enable ptrace for debugging
          securityContext:
            {{- if .Values.debug }}
            capabilities:
              add:
                - SYS_PTRACE
            {{- end }}
      volumes:
        - name: secret
          secret:
            secretName: {{ template "ran-simulator.fullname" . }}-secret
        - name: config
          configMap:
            name: {{ template "ran-simulator.fullname" . }}-config
      {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
